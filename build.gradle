plugins {
  id "java"
  id "io.freefair.lombok" version "5.1.0"
}
sourceCompatibility = 1.11
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.guava:guava:29.0-jre'
    implementation "com.google.inject:guice:3.0"
    implementation 'com.google.inject.extensions:guice-assistedinject:3.0'
    implementation 'com.google.inject.extensions:guice-multibindings:3.0'
    implementation 'com.github.spullara.mustache.java:compiler:0.9.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.4'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.4'
    implementation 'org.apache.commons:commons-math3:3.6.1'    
    
    //compile fileTree(dir: 'lib', include: '*.jar')
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.18.1'
    testImplementation 'org.mockito:mockito-core:3.6.0'
    
}

jar {
    manifest {
        attributes (
"Implementation-Title": "Scales Core",
"Bundle-License": "http://www.fsf.org/licensing/licenses/agpl-3.0.html",
"Bundle-Copyright": "(C) 2020 Andreas Voss - mail@jlab.de",
"Implementation-Vendor-Id": "de.jlab.scales.cored"
        )
    }
}


test {
  useJUnit()
}

build {
  dependsOn(copyAssets)
  dependsOn(copyPreview)
}

// Release Tasks

def webappDir = "$projectDir/src/main/webapp"

task release {
  dependsOn build
  dependsOn createWebsitePreview
  dependsOn createAnkiProfileWithMedia
}

task copyAssets(type:Copy) {
  dependsOn test
  from ('src/assets') {
    include ('*.png', '*.mp3', '*.ly')
  } 
  into 'build/anki'
}

task copyPreview(type:Copy) {
  dependsOn test
  from ('src/assets') {
    include ('*.png', '*.mp3', '*.ly')
  } 
  into 'build/preview'
}

task deleteWebsitePreview(type: Delete) {
  delete "${websitePreview}"
}

task createWebsitePreview(type:Copy) {
  dependsOn copyPreview
  dependsOn deleteWebsitePreview
  from ('build/preview') {
    include ('*.png', '*.mp3', '*.html', "*.json")
  } 
  into "${websitePreview}"
}


task deleteAnkiProfile(type: Delete) {
  delete "${ankiProfile}"
}

task createEmptyAnkiProfile(type: Copy) {
  dependsOn deleteAnkiProfile
  from zipTree("${ankiAsset}")
  into "${ankiProfile}"
}

task createAnkiProfileWithMedia(type: Copy) {
  dependsOn copyAssets
  dependsOn createEmptyAnkiProfile
  from ("build/anki") {
    include ('*.png', '*.mp3')
  }
  into "${ankiProfile}/collection.media"
}

task deleteAnkiAsset(type: Delete) {
  delete "${ankiAsset}"
}

task createAnkiAssetFromProfile(type: Zip) {
  dependsOn deleteAnkiAsset
  archiveFileName = "build.zip"
  destinationDirectory = file("src/assets")
  from "${ankiProfile}"
}


task buildAngular(type:Exec) {
  dependsOn installAngular
  dependsOn createWebsitePreview
  group = BasePlugin.BUILD_GROUP
  commandLine "ng.cmd", "build"
}

task installAngular(type:Exec) {
  group = BasePlugin.BUILD_GROUP
  commandLine "npm.cmd", "install"
}

